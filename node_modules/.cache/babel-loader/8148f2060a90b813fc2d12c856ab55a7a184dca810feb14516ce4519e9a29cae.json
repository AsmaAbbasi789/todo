{"ast":null,"code":"var _jsxFileName = \"/Users/Asma/Documents/ReactJS_/reduxtoolkit-todo/src/components/Todos.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addTodo, removeTodo, updateTodo, toggleComplete } from '../features/todo/todoSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todos({\n  todo\n}) {\n  _s();\n  //   const todos = useSelector(state => state.todos)\n  //   const [msg, setMsg] = useState(todos.length > 0 ? todos[todos.length-1].text : '') \n  //   const dispatch = useDispatch()\n\n  // return (\n  //   <>\n  //   <div>Todos</div>\n  //   <ul className=\"list-none\">\n  //       {todos.map((todo) => (\n  //         <li\n  //           className=\"mt-4 flex justify-between items-center bg-zinc-800 px-4 py-2 rounded\" \n  //           key={todo.id}\n  //         >\n  //         <input \n  //             type='text'\n  //             value={msg}\n  //             readOnly={!todo.editable}\n  //             // onChange={(e)=> {\n  //             //   const updatedTodo = { id: todo.id, text: e.target.value };\n  //             //   update(updatedTodo);\n  //             // }}\n  //             onChange={(e)=>{\n  //               setMsg(e.target.value)\n  //             }}\n\n  //           />\n  //           <div className='text-white'>{todo.text}</div>\n  //           {/* {console.log(\"todo.text: \", todo.text)} */}\n  //           <button\n  //            onClick={() => dispatch(removeTodo(todo.id))}\n  //             className=\"text-white bg-red-500 border-0 py-1 px-4 focus:outline-none hover:bg-red-600 rounded text-md\"\n  //           >\n  //             <svg\n  //               xmlns=\"http://www.w3.org/2000/svg\"\n  //               fill=\"none\"\n  //               viewBox=\"0 0 24 24\"\n  //               strokeWidth={1.5}\n  //               stroke=\"currentColor\"\n  //               className=\"w-6 h-6\"\n  //             >\n  //               <path\n  //                 strokeLinecap=\"round\"\n  //                 strokeLinejoin=\"round\"\n  //                 d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n  //               />\n  //             </svg>\n  //           </button>\n  //           <button className='' onClick={()=> {\n  //             console.log(\"sent id: \", todo.id)\n  //             // dispatch(setEditable(todo.id))\n  //             const updatedTodo = { id: todo.id, text: msg };\n  //             // todo.editable = !todo.editable\n  //             console.log(\"editable VALUE\", todo)\n  //             dispatch(updateTodo(updatedTodo))\n\n  //           }}>\n  //              {todo.editable ? \n  //                 \"üìÅ\"  : \n  //                 \"‚úèÔ∏è\" }\n  //           </button> \n  //         </li>\n  //       ))}\n  //     </ul>\n  //   </>\n  // )\n\n  const [isTodoEditable, setIsTodoEditable] = useState(false);\n  const [todoMsg, setTodoMsg] = useState(todo.text);\n  const dispatch = useDispatch();\n  const editTodo = () => {\n    // dispatch(updateTodo(todo.id, {...todo, todo: todoMsg}))\n    dispatch(updateTodo(todo.id, todoMsg));\n    setIsTodoEditable(false);\n    console.log(isTodoEditable);\n  };\n  const toggleCompleted = () => {\n    console.log('toggle function triggered...', todo.id);\n    dispatch(toggleComplete(todo.id));\n    console.log(todo.completed);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex border border-black/10 rounded-lg px-3 py-1.5 gap-x-3 shadow-sm shadow-white/50 duration-300  text-black ${todo.completed ? \"bg-[#c6e9a7]\" : \"bg-[#ccbed7]\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      className: \"cursor-pointer\",\n      checked: todo.completed,\n      onChange: toggleCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: `border outline-none w-full bg-transparent rounded-lg ${isTodoEditable ? \"border-black/10 px-2\" : \"border-transparent\"} ${todo.completed ? \"line-through\" : \"\"}`,\n      value: todoMsg,\n      onChange: e => setTodoMsg(e.target.value),\n      readOnly: !isTodoEditable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"inline-flex w-8 h-8 rounded-lg text-sm border border-black/10 justify-center items-center bg-gray-50 hover:bg-gray-100 shrink-0 disabled:opacity-50\",\n      onClick: () => {\n        if (todo.completed) return;\n        if (isTodoEditable) {\n          editTodo();\n        } else setIsTodoEditable(prev => !prev);\n      },\n      disabled: todo.completed,\n      children: isTodoEditable ? \"üìÅ\" : \"‚úèÔ∏è\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"inline-flex w-8 h-8 rounded-lg text-sm border border-black/10 justify-center items-center bg-gray-50 hover:bg-gray-100 shrink-0\",\n      onClick: () => dispatch(removeTodo(todo.id)),\n      children: \"\\u274C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }, this);\n}\n_s(Todos, \"bHp2cFW/EP/zpIHJxQdQToDrJ9c=\", false, function () {\n  return [useDispatch];\n});\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","addTodo","removeTodo","updateTodo","toggleComplete","jsxDEV","_jsxDEV","Todos","todo","_s","isTodoEditable","setIsTodoEditable","todoMsg","setTodoMsg","text","dispatch","editTodo","id","console","log","toggleCompleted","completed","className","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","value","e","target","readOnly","onClick","prev","disabled","_c","$RefreshReg$"],"sources":["/Users/Asma/Documents/ReactJS_/reduxtoolkit-todo/src/components/Todos.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {addTodo, removeTodo, updateTodo, toggleComplete} from '../features/todo/todoSlice'\n\nfunction Todos({todo}) {\n  //   const todos = useSelector(state => state.todos)\n  //   const [msg, setMsg] = useState(todos.length > 0 ? todos[todos.length-1].text : '') \n  //   const dispatch = useDispatch()\n    \n\n  // return (\n  //   <>\n  //   <div>Todos</div>\n  //   <ul className=\"list-none\">\n  //       {todos.map((todo) => (\n  //         <li\n  //           className=\"mt-4 flex justify-between items-center bg-zinc-800 px-4 py-2 rounded\" \n  //           key={todo.id}\n  //         >\n  //         <input \n  //             type='text'\n  //             value={msg}\n  //             readOnly={!todo.editable}\n  //             // onChange={(e)=> {\n  //             //   const updatedTodo = { id: todo.id, text: e.target.value };\n  //             //   update(updatedTodo);\n  //             // }}\n  //             onChange={(e)=>{\n  //               setMsg(e.target.value)\n  //             }}\n              \n  //           />\n  //           <div className='text-white'>{todo.text}</div>\n  //           {/* {console.log(\"todo.text: \", todo.text)} */}\n  //           <button\n  //            onClick={() => dispatch(removeTodo(todo.id))}\n  //             className=\"text-white bg-red-500 border-0 py-1 px-4 focus:outline-none hover:bg-red-600 rounded text-md\"\n  //           >\n  //             <svg\n  //               xmlns=\"http://www.w3.org/2000/svg\"\n  //               fill=\"none\"\n  //               viewBox=\"0 0 24 24\"\n  //               strokeWidth={1.5}\n  //               stroke=\"currentColor\"\n  //               className=\"w-6 h-6\"\n  //             >\n  //               <path\n  //                 strokeLinecap=\"round\"\n  //                 strokeLinejoin=\"round\"\n  //                 d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n  //               />\n  //             </svg>\n  //           </button>\n  //           <button className='' onClick={()=> {\n  //             console.log(\"sent id: \", todo.id)\n  //             // dispatch(setEditable(todo.id))\n  //             const updatedTodo = { id: todo.id, text: msg };\n  //             // todo.editable = !todo.editable\n  //             console.log(\"editable VALUE\", todo)\n  //             dispatch(updateTodo(updatedTodo))\n              \n  //           }}>\n  //              {todo.editable ? \n  //                 \"üìÅ\"  : \n  //                 \"‚úèÔ∏è\" }\n  //           </button> \n  //         </li>\n  //       ))}\n  //     </ul>\n  //   </>\n  // )\n\n\n\n  const [isTodoEditable, setIsTodoEditable] = useState(false)\n  const [todoMsg, setTodoMsg] = useState(todo.text)\n  const dispatch = useDispatch()\n\n  const editTodo = () => {\n    // dispatch(updateTodo(todo.id, {...todo, todo: todoMsg}))\n    dispatch(updateTodo(todo.id, todoMsg))\n    setIsTodoEditable(false)\n    console.log(isTodoEditable)\n  }\n  const toggleCompleted = () => {\n    console.log('toggle function triggered...',todo.id );\n    dispatch(toggleComplete(todo.id))\n    console.log(todo.completed)\n  }\n\n  return (\n      <div\n          className={`flex border border-black/10 rounded-lg px-3 py-1.5 gap-x-3 shadow-sm shadow-white/50 duration-300  text-black ${\n              todo.completed ? \"bg-[#c6e9a7]\" : \"bg-[#ccbed7]\"\n          }`}\n      >\n          <input\n              type=\"checkbox\"\n              className=\"cursor-pointer\"\n              checked={todo.completed}\n              onChange={toggleCompleted}\n          />\n          <input\n              type=\"text\"\n              className={`border outline-none w-full bg-transparent rounded-lg ${\n                  isTodoEditable ? \"border-black/10 px-2\" : \"border-transparent\"\n              } ${todo.completed ? \"line-through\" : \"\"}`}\n              value={todoMsg}\n              onChange={(e) => setTodoMsg(e.target.value)}\n              readOnly={!isTodoEditable}\n          />\n          {/* Edit, Save Button */}\n          <button\n              className=\"inline-flex w-8 h-8 rounded-lg text-sm border border-black/10 justify-center items-center bg-gray-50 hover:bg-gray-100 shrink-0 disabled:opacity-50\"\n              onClick={() => {\n                  if (todo.completed) return;\n\n                  if (isTodoEditable) {\n                      editTodo();\n                  } else setIsTodoEditable((prev) => !prev);\n              }}\n              disabled={todo.completed}\n          >\n              {isTodoEditable ? \"üìÅ\" : \"‚úèÔ∏è\"}\n          </button>\n          {/* Delete Todo Button */}\n          <button\n              className=\"inline-flex w-8 h-8 rounded-lg text-sm border border-black/10 justify-center items-center bg-gray-50 hover:bg-gray-100 shrink-0\"\n              onClick={() => dispatch(removeTodo(todo.id))}\n          >\n              ‚ùå\n          </button>\n      </div>\n  );\n}\n\nexport default Todos"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}