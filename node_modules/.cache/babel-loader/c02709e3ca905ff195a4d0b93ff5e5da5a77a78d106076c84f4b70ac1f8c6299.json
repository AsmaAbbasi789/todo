{"ast":null,"code":"import { createSlice, nanoid } from '@reduxjs/toolkit';\nimport { act } from 'react-dom/test-utils';\nconst initialState = {\n  // editable : false,\n  todos: [\n    // {id: 1, text: \"Hello world\", completed : false}\n  ] // {id: 1, text: \"Hello world\"}\n};\n\nconst ntodos = [];\nexport const todoSlice = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    addTodo: (state, action) => {\n      const todo = {\n        id: nanoid(),\n        text: action.payload,\n        completed: false\n      };\n      state.todos.push(todo);\n      console.log(\"Added item: \", todo);\n    },\n    removeTodo: (state, action) => {\n      state.todos = state.todos.filter(todo => todo.id !== action.payload);\n    },\n    updateTodo: (state, action) => {\n      state.todos = state.todos.map(todo => todo.id === action.payload.id ? {\n        ...todo,\n        text: action.payload.text\n      } : todo);\n    },\n    toggleComplete: (state, action) => {\n      state.todos = state.todos.map(todo => todo.id === action.payload.id ? {\n        ...todo,\n        completed: !todo.completed\n      } : todo);\n    }\n\n    // updateTodo: (state, action) =>{\n    // if (todo.id === action.payload.id) {}\n    // updateTodo: (state, action) => {\n    //     console.log(\"update called\", state.todos);\n    //      state.todos = state.todos.map((todo) => {\n    //         if (todo.id === action.payload.id) {\n    //              return { ...todo, text: action.payload.text };\n    //         }\n    //         return state.todos;\n    //     });\n    //     console.log(\"updated todo..\", state.todos);\n    // },\n    // toggleComplete: (state, action) => {\n    //     console.log(\"before toggle: \", state.todos);\n    //     state.todos = state.todos.map((todo) => {\n    //         if (todo.id === action.payload.id) {\n    //             return { ...todo, completed: !todo.completed };\n    //         }\n    //         return todo;\n    //     });\n    //     console.log(\"after toggle: \", state.todos);\n    // },\n  }\n});\n\n// they will help in individual components\nexport const {\n  addTodo,\n  removeTodo,\n  updateTodo,\n  toggleComplete\n} = todoSlice.actions;\n\n// to update store states\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","act","initialState","todos","ntodos","todoSlice","name","reducers","addTodo","state","action","todo","id","text","payload","completed","push","console","log","removeTodo","filter","updateTodo","map","toggleComplete","actions","reducer"],"sources":["/Users/Asma/Documents/ReactJS_/reduxtoolkit-todo/src/features/todo/todoSlice.js"],"sourcesContent":["import {createSlice, nanoid } from '@reduxjs/toolkit';\nimport { act } from 'react-dom/test-utils';\n\n\nconst initialState = {\n    // editable : false,\n    todos: [\n        // {id: 1, text: \"Hello world\", completed : false}\n    ] // {id: 1, text: \"Hello world\"}\n}\n\nconst ntodos =[]\n\nexport const todoSlice = createSlice({\n    name: 'todo',\n    initialState,\n    reducers: {\n        addTodo: (state, action) => {\n            const todo = {\n                id: nanoid(), \n                text: action.payload,\n                completed: false\n            }\n            state.todos.push(todo)\n            console.log(\"Added item: \", todo)\n        },\n        removeTodo: (state, action) => {\n            state.todos = state.todos.filter((todo) => todo.id !== action.payload )\n        },\n        updateTodo: (state, action) => {  state.todos = state.todos.map((todo) =>todo.id === action.payload.id ? {...todo, text: action.payload.text} : todo  )},\n        \n        toggleComplete: (state, action) => {  state.todos = state.todos.map((todo) =>todo.id === action.payload.id ? {...todo, completed: !todo.completed} : todo  )}\n\n        // updateTodo: (state, action) =>{\n        // if (todo.id === action.payload.id) {}\n        // updateTodo: (state, action) => {\n        //     console.log(\"update called\", state.todos);\n        //      state.todos = state.todos.map((todo) => {\n        //         if (todo.id === action.payload.id) {\n        //              return { ...todo, text: action.payload.text };\n        //         }\n        //         return state.todos;\n        //     });\n        //     console.log(\"updated todo..\", state.todos);\n        // },\n        // toggleComplete: (state, action) => {\n        //     console.log(\"before toggle: \", state.todos);\n        //     state.todos = state.todos.map((todo) => {\n        //         if (todo.id === action.payload.id) {\n        //             return { ...todo, completed: !todo.completed };\n        //         }\n        //         return todo;\n        //     });\n        //     console.log(\"after toggle: \", state.todos);\n        // },\n    }})\n\n// they will help in individual components\nexport const {addTodo, removeTodo, updateTodo, toggleComplete} = todoSlice.actions\n\n// to update store states\nexport default todoSlice.reducer"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AACrD,SAASC,GAAG,QAAQ,sBAAsB;AAG1C,MAAMC,YAAY,GAAG;EACjB;EACAC,KAAK,EAAE;IACH;EAAA,CACH,CAAC;AACN,CAAC;;AAED,MAAMC,MAAM,GAAE,EAAE;AAEhB,OAAO,MAAMC,SAAS,GAAGN,WAAW,CAAC;EACjCO,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxB,MAAMC,IAAI,GAAG;QACTC,EAAE,EAAEZ,MAAM,CAAC,CAAC;QACZa,IAAI,EAAEH,MAAM,CAACI,OAAO;QACpBC,SAAS,EAAE;MACf,CAAC;MACDN,KAAK,CAACN,KAAK,CAACa,IAAI,CAACL,IAAI,CAAC;MACtBM,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEP,IAAI,CAAC;IACrC,CAAC;IACDQ,UAAU,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACiB,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKF,MAAM,CAACI,OAAQ,CAAC;IAC3E,CAAC;IACDO,UAAU,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAAGD,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACmB,GAAG,CAAEX,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKF,MAAM,CAACI,OAAO,CAACF,EAAE,GAAG;QAAC,GAAGD,IAAI;QAAEE,IAAI,EAAEH,MAAM,CAACI,OAAO,CAACD;MAAI,CAAC,GAAGF,IAAM,CAAC;IAAA,CAAC;IAExJY,cAAc,EAAEA,CAACd,KAAK,EAAEC,MAAM,KAAK;MAAGD,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACmB,GAAG,CAAEX,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKF,MAAM,CAACI,OAAO,CAACF,EAAE,GAAG;QAAC,GAAGD,IAAI;QAAEI,SAAS,EAAE,CAACJ,IAAI,CAACI;MAAS,CAAC,GAAGJ,IAAM,CAAC;IAAA;;IAE5J;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;AAAC,CAAC,CAAC;;AAEP;AACA,OAAO,MAAM;EAACH,OAAO;EAAEW,UAAU;EAAEE,UAAU;EAAEE;AAAc,CAAC,GAAGlB,SAAS,CAACmB,OAAO;;AAElF;AACA,eAAenB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}