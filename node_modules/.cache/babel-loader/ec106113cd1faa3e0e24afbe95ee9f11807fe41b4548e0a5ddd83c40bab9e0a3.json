{"ast":null,"code":"import { createSlice, nanoid } from '@reduxjs/toolkit';\nimport { act } from 'react-dom/test-utils';\nconst initialState = {\n  // editable : false,\n  todos: [{\n    id: 1,\n    text: \"Hello world\",\n    completed: false\n  }] // {id: 1, text: \"Hello world\"}\n};\n\nconst ntodos = [];\nexport const todoSlice = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    addTodo: (state, action) => {\n      const todo = {\n        id: nanoid(),\n        text: action.payload,\n        completed: false\n      };\n      state.todos.push(todo);\n      console.log(\"Added item: \", todo);\n    },\n    removeTodo: (state, action) => {\n      state.todos = state.todos.filter(todo => todo.id !== action.payload);\n    },\n    updateTodo: (state, action) => {\n      state.todos = state.todos.map(todo => todo.id === action.payload.id ? {\n        ...todo,\n        text: action.payload.text\n      } : todo);\n    },\n    toggleComplete: (state, action) => {\n      state.todos = state.todos.map(todo => todo.id === action.payload.id ? {\n        ...todo,\n        completed: !todo.completed\n      } : todo);\n    }\n\n    // updateTodo: (state, action) =>{\n    // if (todo.id === action.payload.id) {}\n    // updateTodo: (state, action) => {\n    //     console.log(\"update called\", state.todos);\n    //      state.todos = state.todos.map((todo) => {\n    //         if (todo.id === action.payload.id) {\n    //              return { ...todo, text: action.payload.text };\n    //         }\n    //         return state.todos;\n    //     });\n    //     console.log(\"updated todo..\", state.todos);\n    // },\n    // toggleComplete: (state, action) => {\n    //     console.log(\"before toggle: \", state.todos);\n    //     state.todos = state.todos.map((todo) => {\n    //         if (todo.id === action.payload.id) {\n    //             return { ...todo, completed: !todo.completed };\n    //         }\n    //         return todo;\n    //     });\n    //     console.log(\"after toggle: \", state.todos);\n    // },\n  }\n});\n\n// they will help in individual components\nexport const {\n  addTodo,\n  removeTodo,\n  updateTodo,\n  toggleComplete\n} = todoSlice.actions;\n\n// to update store states\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","act","initialState","todos","id","text","completed","ntodos","todoSlice","name","reducers","addTodo","state","action","todo","payload","push","console","log","removeTodo","filter","updateTodo","map","toggleComplete","actions","reducer"],"sources":["/Users/Asma/Documents/ReactJS_/reduxtoolkit-todo/src/features/todo/todoSlice.js"],"sourcesContent":["import {createSlice, nanoid } from '@reduxjs/toolkit';\nimport { act } from 'react-dom/test-utils';\n\n\nconst initialState = {\n    // editable : false,\n    todos: [\n        {id: 1, text: \"Hello world\", completed : false}\n    ] // {id: 1, text: \"Hello world\"}\n}\n\nconst ntodos =[]\n\nexport const todoSlice = createSlice({\n    name: 'todo',\n    initialState,\n    reducers: {\n        addTodo: (state, action) => {\n            const todo = {\n                id: nanoid(), \n                text: action.payload,\n                completed: false\n            }\n            state.todos.push(todo)\n            console.log(\"Added item: \", todo)\n        },\n        removeTodo: (state, action) => {\n            state.todos = state.todos.filter((todo) => todo.id !== action.payload )\n        },\n        updateTodo: (state, action) => {  state.todos = state.todos.map((todo) =>todo.id === action.payload.id ? {...todo, text: action.payload.text} : todo  )},\n        \n        toggleComplete: (state, action) => {  state.todos = state.todos.map((todo) =>todo.id === action.payload.id ? {...todo, completed: !todo.completed} : todo  )}\n\n        // updateTodo: (state, action) =>{\n        // if (todo.id === action.payload.id) {}\n        // updateTodo: (state, action) => {\n        //     console.log(\"update called\", state.todos);\n        //      state.todos = state.todos.map((todo) => {\n        //         if (todo.id === action.payload.id) {\n        //              return { ...todo, text: action.payload.text };\n        //         }\n        //         return state.todos;\n        //     });\n        //     console.log(\"updated todo..\", state.todos);\n        // },\n        // toggleComplete: (state, action) => {\n        //     console.log(\"before toggle: \", state.todos);\n        //     state.todos = state.todos.map((todo) => {\n        //         if (todo.id === action.payload.id) {\n        //             return { ...todo, completed: !todo.completed };\n        //         }\n        //         return todo;\n        //     });\n        //     console.log(\"after toggle: \", state.todos);\n        // },\n    }})\n\n// they will help in individual components\nexport const {addTodo, removeTodo, updateTodo, toggleComplete} = todoSlice.actions\n\n// to update store states\nexport default todoSlice.reducer"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AACrD,SAASC,GAAG,QAAQ,sBAAsB;AAG1C,MAAMC,YAAY,GAAG;EACjB;EACAC,KAAK,EAAE,CACH;IAACC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,aAAa;IAAEC,SAAS,EAAG;EAAK,CAAC,CAClD,CAAC;AACN,CAAC;;AAED,MAAMC,MAAM,GAAE,EAAE;AAEhB,OAAO,MAAMC,SAAS,GAAGT,WAAW,CAAC;EACjCU,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxB,MAAMC,IAAI,GAAG;QACTV,EAAE,EAAEJ,MAAM,CAAC,CAAC;QACZK,IAAI,EAAEQ,MAAM,CAACE,OAAO;QACpBT,SAAS,EAAE;MACf,CAAC;MACDM,KAAK,CAACT,KAAK,CAACa,IAAI,CAACF,IAAI,CAAC;MACtBG,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,IAAI,CAAC;IACrC,CAAC;IACDK,UAAU,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACT,KAAK,GAAGS,KAAK,CAACT,KAAK,CAACiB,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACV,EAAE,KAAKS,MAAM,CAACE,OAAQ,CAAC;IAC3E,CAAC;IACDM,UAAU,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAAGD,KAAK,CAACT,KAAK,GAAGS,KAAK,CAACT,KAAK,CAACmB,GAAG,CAAER,IAAI,IAAIA,IAAI,CAACV,EAAE,KAAKS,MAAM,CAACE,OAAO,CAACX,EAAE,GAAG;QAAC,GAAGU,IAAI;QAAET,IAAI,EAAEQ,MAAM,CAACE,OAAO,CAACV;MAAI,CAAC,GAAGS,IAAM,CAAC;IAAA,CAAC;IAExJS,cAAc,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAAGD,KAAK,CAACT,KAAK,GAAGS,KAAK,CAACT,KAAK,CAACmB,GAAG,CAAER,IAAI,IAAIA,IAAI,CAACV,EAAE,KAAKS,MAAM,CAACE,OAAO,CAACX,EAAE,GAAG;QAAC,GAAGU,IAAI;QAAER,SAAS,EAAE,CAACQ,IAAI,CAACR;MAAS,CAAC,GAAGQ,IAAM,CAAC;IAAA;;IAE5J;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;AAAC,CAAC,CAAC;;AAEP;AACA,OAAO,MAAM;EAACH,OAAO;EAAEQ,UAAU;EAAEE,UAAU;EAAEE;AAAc,CAAC,GAAGf,SAAS,CAACgB,OAAO;;AAElF;AACA,eAAehB,SAAS,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}